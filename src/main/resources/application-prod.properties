#******************************************
# Database Configuration using Environment Variables
#******************************************
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=10
#******************************************
# Redis Configuration for Caching
#******************************************
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.data.redis.url=${REDIS_URL}
#******************************************
# JPA settings for production
#******************************************
spring.jpa.hibernate.ddl-auto=create-drop
#******************************************
# Security Configuration for JWT
#******************************************
security.jwt.secret-key=${JWT_SECRET_KEY}
security.jwt.expiration-time=2592000000
#******************************************
# Email Configuration (using environment variables)
#******************************************
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#******************************************
# Token Configuration
#******************************************
token.validity.in.seconds=3600
token.base.url=${BASE_URL}
#******************************************
#swagger
#******************************************
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html
#******************************************
# Security settings
#******************************************
cors.allowed-origins=${ALLOWED_ORIGINS}
#******************************************
# Server settings
#******************************************
server.port=${PORT:8080}
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#******************************************
# Forward Headers (for proxies)
#******************************************
server.forward-headers-strategy=framework
#******************************************
# Logging Configuration
#******************************************
logging.level.root=info
logging.level.org.springframework=warn
logging.level.org.hibernate=warn
logging.pattern.console=\
  [38;5;214mtimestamp[0m: [38;5;85m"%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}"[0m,\n\
  [38;5;219mlevel[0m: %clr(%5p)[0m,\
  [38;5;117mapp[0m: [38;5;51m[Nuqta][0m,\
  [38;5;226mlogger[0m: [38;5;227m"%logger{40}"[0m,\n\
  [38;5;195mmessage[0m: [38;5;15m"%m"[0m\n \
  ---------------------------------------------------------------------------------\n
# SQL Formatting Configuration
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.show_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Disable pretty-printing SQL (makes it single-line)
spring.jpa.properties.hibernate.format_sql=false